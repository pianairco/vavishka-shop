server:
  port: 80
  servlet:
#    context-path=/web-app
    encoding:
      force-response: true
spring:
  servlet:
    multipart:
      max-file-size: 2048KB
      max-request-size: 2048KB
  datasource:
    url: jdbc:h2:file:./data/vavishka
    #    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: password
    h2:
      console:
        enabled: true
    jpa:
      database-platform: org.hibernate.dialect.H2Dialect
  resources:
    cache: false
    cache.period: 0
  template:
    cache: false
  jpa:
    hibernate:
      naming:
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
storage:
  location: c:/upload-dir
  groups:
    sample:
      folder: sample
      width: 640
      height: 640
    sample-session-image:
      folder: sample-session
      width: 512
      height: 512
      afterSaveImage: sampleSessionImageBusiness
    sample-session:
      folder: sample-session
      width: 512
      height: 512
      sql: update samples_session set $image_src$ = ? where id = ?
      sqls:
        - delete samples_session_image where samples_session_id = $sampleSessionId$ and orders = $orders$
        - insert into samples_session_image (id, samples_session_id, image_src, orders) values($id$, $sampleSessionId$, $imageSrc$, $orders$)
    header:
      folder: header
      width: 640
      height: 640
      sql: insert into header (path, orders) values (?, ?)
app:
  mode:
    debug: true
image-loader:
  groups:
    header: select path, orders from header where id in (select id from (SELECT max(id) id, orders FROM header GROUP BY orders))
static-resource:
  paths:
    '[/**]':
      - classpath:/public/
      - classpath:/static/
      - file:///c:/upload-dir/
    '[/bulma]':
      - file:///c:/upload-dir/
sql:
  groups:
    sample:
      insert: insert into samples (id, title, description, image_src) values(?, ?, ?, ?)
      update: update samples set title = ?, description = ?, image_src = ? where id = ?
      select: select id, title, description, image_src from samples
      delete: delete from samples where id = ?
    sample-session:
      insert: insert into samples_session (id, samples_id, title, description, icon_src, orders) values(?, ?, ?, ?, ?, ?)
      update: update samples_session set title = ?, description = ?, image_src = ? where id = ?
      select: select id, samples_id, title, description, detail, icon_src, orders from samples_session where samples_id = ? order by orders asc
      delete: delete from samples_session where id = ?
  map:
    get-sample-by-id: select id, title, description, image_src from samples where id = ?
    get-session-images: select id, image_src, orders from samples_session_image where samples_session_id = ?
    insert-session-image: insert into samples_session_image (id, image_src, samples_session_id, orders) values (?, ?, ?, ?)
